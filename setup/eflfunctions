#!/bin/bash

make_install() {
build_dir=$1
repo_dir=$2
if [ ! -z "$2" ]; then  
repo_dir=$1
fi 
start_dir=$(pwd)
cd $build_dir
echo $(pwd)
ls
./autogen.sh
make
sudo make install 
cd $start_dir
echo $(pwd)
rm -rf $repo_dir

}

meson_install() {
build_dir=$1
repo_dir=$2
if [ ! -z "$2" ]; then  
repo_dir=$1
fi 
start_dir=$(pwd)
cd $build_dir
echo $(pwd)
ls
meson build
cd build
ninja
sudo nija install 
cd $start_dir
echo $(pwd)
rm -rf $repo_dir

}

git_make_install() {
build_dir=$2
if [ ! -z "$3" ]; then  
build_dir="$2/$3" 
fi 
git clone $1 $2
make_install $build_dir $2
}

git_meson_install() {
build_dir=$2
if [ ! -z "$3" ]; then  
build_dir="$2/$3" 
fi 
git clone $1 $2
meson_install $build_dir $2
}



updatelibs() {
sudo ln -s /usr/local/share/dbus-1/services/org.enlightenment.Ethumb.service /usr/share/dbus-1/services/org.enlightenment.Ethumb.service
sudo ldconfig
}

envsetup() {

export PATH=/usr/local/bin:"$PATH"
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:"$PKG_CONFIG_PATH"
export LD_LIBRARY_PATH=/usr/local/lib:"$LD_LIBRARY_PATH"
#Below choose one of the following CFLAGS to use. To ensure your code is compiled with decent optimzations you should also set this up in your environment:
export CFLAGS="-O3 -ffast-math -march=native"


#Note the LD_LIBRARY_PATH environment variable is set. You can ensure the system always supports /usr/local/lib by editing /etc/ld.so.conf or adding a file to /etc/ld.so.conf.d and #simply have a line in either file that says:

#/usr/local/lib
#And remember to run sudo ldconfig tool every time you install a library to ensure caches are updated.


}















